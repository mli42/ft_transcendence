version: '3'

services:
  api:
    build:
      context: ./docker/
      dockerfile: Dockerfile-backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app_backend
      - ./upload/:/upload
    networks:
      - webapp
      - database
    restart: always
    container_name: backend_app

  webapp:
    build:
      context: ./docker/
      dockerfile: Dockerfile-frontend
    ports:
      - "3030:3030"
    volumes:
      - ./frontend:/app_frontend
    networks:
      - webapp
    restart: always
    container_name: frontend_app

  proxy:
    build:
      context: ./docker/
      dockerfile: Dockerfile-proxy
    ports:
      - "443:443"
      - "80:80"
    networks:
      - webapp
    restart: always
    container_name: proxy

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: database_transcendence
    ports:
      - "31415:5432"
    volumes:
      - ./database-data:/var/lib/postgresql/data
    networks:
      - database
    restart: always
    container_name: db_app

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - database
    restart: always
    container_name: pgadmin

networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
